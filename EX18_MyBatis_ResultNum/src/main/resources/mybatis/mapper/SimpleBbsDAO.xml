<?xml version="1.0" encoding="UTF-8"?>
<!-- 매퍼 독타입 -->
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 인터페이스 dao를 namespace로 지정해서 -->	
<mapper namespace="com.study.springboot.dao.ISimpleBbsDAO">
	<!-- 각메소드 삽입. sql문에 따라 element설정(insert,select,delete) -->
	<!-- select의 경우 resultType에 DTO를 넣어 DTO로 반환한다는 뜻을 밝힘 -->
	<select id="listDAO" resultType="com.study.springboot.dto.SimpleBbsDTO">
		select * from simple_bbs order by id desc
	</select>
	<!-- 파라미터의 순서대로 접근하되 인덱스 0부터 시작한다. -->
	<select id="viewDAO" resultType="com.study.springboot.dto.SimpleBbsDTO">
	<!-- 첫번째 파라미터라서 index 0 -->
		select * from simple_bbs where id = #{0}
	</select>
	<!-- Hashmap 여러개 이름으로 받을 때 -->
	<!-- 
		Map을 통해 파라미터가 전달되므로 ParameterType에 패키지를 포함한 클래스경로를 기술하고
		인파라미터 설정시에는 Key값을 이용한다.
	 -->
	<insert id="writeDAO">
		insert into simple_bbs(id,writer,title,content)
			values(simple_bbs_seq.nextval,#{item1},#{item2},#{item3})
	</insert>
	<!--
		@Param 어노테이션에서 지정한 이름을 인파라미터로 사용한다.
		deleteDAO(@Param("_id")  String id) 이와 같이 정의되어 있다.
	 -->
	<delete id="deleteDAO">
		delete from simple_bbs where id = #{_id}
	</delete>
	
	<!-- 게시물 총 갯수 -->
	<select id="articleCount" resultType="_int">
		select count(*) from simple_bbs
	</select>

</mapper>